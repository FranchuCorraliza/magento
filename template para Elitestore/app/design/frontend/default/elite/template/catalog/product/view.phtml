<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<!-- TABS END -->
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>

<div id="messages_product_view"><?php echo $this->getMessagesBlock()->getGroupedHtml() ?></div>
<div class="product-view" id="<?php echo $_product->getSku();?>">
    <div class="product-essential">
    <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <?php echo $this->getBlockHtml('formkey') ?>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        
        <div class="product-img-box">
            <?php echo $this->getChildHtml('media') ?>
        </div>

      	<div class="product-shop">
        	<div class="product-shop-info">
                <div class="product-name">
                    <?php $optionIdManufacturer = $_product->getData('manufacturer');?>
                    <?php
                    $manufacturer = Mage::getModel('manufacturer/manufacturer')->getUrlKeyByOptionId($optionIdManufacturer);?>

                    <p class="product-name__brand"><a href="<?php echo $this->getUrl($manufacturer);?>"><?php echo $_product->getAttributeText('manufacturer')?></a></p>
                    <p class="product-name__name"><?php echo mb_strtolower ($_helper->productAttribute($_product, $_product->getName(), 'name'),'UTF-8') ?></p>
                </div>
            <?php echo $this->getPriceHtml($_product) ?>
            <p class="sku"><?php echo $_product->getResource()->getAttribute('sku')->getFrontend()->getValue($_product);?></p>
			<?php echo $this->getChildHtml('colores'); ?>
            <?php if ($_product->isSaleable()):?>
				<?php if ($_product->getData('order_by_request')):?>
					<?php echo $this->getChildChildHtml('container3', '', true, true) ?>
				<?php else: ?>
					<?php echo $this->getChildHtml('product_type_data') ?>
					<?php echo $this->getChildChildHtml('container1', '', true, true) ?>
					<?php echo $this->getChildChildHtml('container2', '', true, true) ?>
				<?php endif; ?>
            <?php else: ?>
				<?php echo $this->getChildHtml('out-of-stock') ?>
			<?php endif;?>
			<?php echo $this->getChildHtml("products-details"); ?>
			</div>
       	</div>
    	
    </form>
   
    </div> 
        <?php echo $this->getChildHtml('more_products_combi') ?>
        <?php echo $this->getChildHtml('more_products') ?>
       	
   </div>


    <script type="text/javascript">
    //<![CDATA[
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
			alert('SubmitLight');
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
    //]]>
    </script>
    </div>